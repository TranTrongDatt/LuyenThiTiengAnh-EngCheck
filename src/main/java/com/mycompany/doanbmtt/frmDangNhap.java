                                                                                                                                                                                                                                                                                        //@author:ÔķŇőᾝüĄĦᾍŉ¦ǠǕņĿ®đþĜĒ¾ĀĈĈĈÄĚĖôĢſĹòĚύýĄĦǌŎ¦ýòĊĊÆĔĔĚĐ¾ćăâĬĀʔɿŘŇ¦ĝĻņŀ®ĲņœᾡûðÿøĊÀĜĎĠĐ¸ĂĆĊâÜŋœţᾥôðĪōƺüĄīœŎîðÿøĊÀĜĎĠĐ·ĉćĊâÜŋœţᾥôðĦŀƸüŌþĺňƀĳòąøÀĖĖĚĖ¶ĂĆĎĊ
package com.mycompany.doanbmtt;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.warrenstrange.googleauth.GoogleAuthenticator;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**@author
 * Nhóm ChillGroup
 * Nguyễn Hải Đăng - 2280600668
 * Bùi Bảo Hân - 2280600871
 * Trương Minh Nhiều - 2280602242
 * Nguyễn Xuân Minh - 2280601952
 * Nguyễn Thành Phúc - 2280602462
 */
public class frmDangNhap extends javax.swing.JFrame {
    private String currentCaptcha; 
    private static final String url = "jdbc:sqlserver://FAROLPC\\SQLEXPRESS:1433;databaseName=ENGCHECK;encrypt=true;trustServerCertificate=true;";
    private static final String username = "sa";
    private static final String password = "123456789";
    private String tenNguoiDung;
    private int maNguoiDung;
    private boolean isAdmin = false;
    /**
     * Creates new form frmDangNhap
     */
    public frmDangNhap() {       
        initComponents(); 
        lbAuthen.setVisible(false);
        pnAuthen.setVisible(false);
        txtPass.setVisible(false);
        lbPass.setVisible(false);
        txtGG.setVisible(false);
        lbGG.setVisible(false);
        txtCAPTCHA.setVisible(false);
        lbCAPTCHA.setVisible(false);
        lbCaptcha.setVisible(false);
        btnResetCAPTCHA.setVisible(false);
        txtQuenMatKhau.setVisible(false);
        pnQuenMatKhau.setVisible(false);
        displayCaptcha();     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        txtDangKy = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnDangNhap = new javax.swing.JButton();
        pnQuenMatKhau = new javax.swing.JPanel();
        txtQuenMatKhau = new javax.swing.JLabel();
        lbPass = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        txtCAPTCHA = new javax.swing.JTextField();
        lbCaptcha = new javax.swing.JLabel();
        lbCAPTCHA = new javax.swing.JLabel();
        btnResetCAPTCHA = new javax.swing.JButton();
        txtGG = new javax.swing.JTextField();
        pnAuthen = new javax.swing.JPanel();
        lbAuthen = new javax.swing.JLabel();
        lbGG = new javax.swing.JLabel();
        lbThongBao = new javax.swing.JLabel();
        btnAuthen = new javax.swing.JButton();
        btnPass = new javax.swing.JButton();
        btnBack = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        IconVietnam = new javax.swing.JLabel();
        HinhNen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        txtDangKy.setBackground(new java.awt.Color(255, 255, 255));
        txtDangKy.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        txtDangKy.setForeground(new java.awt.Color(38, 38, 255));
        txtDangKy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtDangKy.setText("Bạn chưa có tài khoản? Đăng ký tại đây.");
        txtDangKy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDangKy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDangKyMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDangKy)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(txtDangKy)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 550, 440, 40));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 70)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setText("Đăng nhập");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        btnDangNhap.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnDangNhap.setForeground(new java.awt.Color(0, 0, 0));
        btnDangNhap.setText("Đăng nhập");
        btnDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });
        getContentPane().add(btnDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 430, -1, -1));

        pnQuenMatKhau.setBackground(new java.awt.Color(255, 204, 255));
        pnQuenMatKhau.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        txtQuenMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        txtQuenMatKhau.setForeground(new java.awt.Color(0, 0, 255));
        txtQuenMatKhau.setText("Quên mật khẩu?");
        txtQuenMatKhau.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtQuenMatKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtQuenMatKhauMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnQuenMatKhauLayout = new javax.swing.GroupLayout(pnQuenMatKhau);
        pnQuenMatKhau.setLayout(pnQuenMatKhauLayout);
        pnQuenMatKhauLayout.setHorizontalGroup(
            pnQuenMatKhauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnQuenMatKhauLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtQuenMatKhau)
                .addContainerGap())
        );
        pnQuenMatKhauLayout.setVerticalGroup(
            pnQuenMatKhauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuenMatKhauLayout.createSequentialGroup()
                .addComponent(txtQuenMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pnQuenMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 520, 160, 30));

        lbPass.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        lbPass.setForeground(new java.awt.Color(0, 0, 0));
        lbPass.setText("Mật khẩu");
        getContentPane().add(lbPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, 150, -1));
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 350, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Email hoặc Tên tài khoản");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));
        getContentPane().add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 290, 350, 40));
        getContentPane().add(txtCAPTCHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 390, 180, 35));

        lbCaptcha.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lbCaptcha.setText("CAPTCHA");
        getContentPane().add(lbCaptcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, -1, -1));
        getContentPane().add(lbCAPTCHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 340, 230, 37));

        btnResetCAPTCHA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnResetCAPTCHA.setText("Làm mới");
        btnResetCAPTCHA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnResetCAPTCHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCAPTCHAActionPerformed(evt);
            }
        });
        getContentPane().add(btnResetCAPTCHA, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 390, -1, -1));

        txtGG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGGMouseClicked(evt);
            }
        });
        getContentPane().add(txtGG, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, 160, 40));

        pnAuthen.setBackground(new java.awt.Color(204, 255, 255));
        pnAuthen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        pnAuthen.setForeground(new java.awt.Color(255, 255, 255));

        lbAuthen.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lbAuthen.setText("Mở app Google Authenticator để lấy OTP!");

        javax.swing.GroupLayout pnAuthenLayout = new javax.swing.GroupLayout(pnAuthen);
        pnAuthen.setLayout(pnAuthenLayout);
        pnAuthenLayout.setHorizontalGroup(
            pnAuthenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAuthenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbAuthen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnAuthenLayout.setVerticalGroup(
            pnAuthenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAuthenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbAuthen)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        getContentPane().add(pnAuthen, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 390, 50));

        lbGG.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbGG.setText("Google Authenticator");
        getContentPane().add(lbGG, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, 40));

        lbThongBao.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        getContentPane().add(lbThongBao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 780, 40));

        btnAuthen.setText("Đăng nhập bằng Autheticator");
        btnAuthen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAuthen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAuthenActionPerformed(evt);
            }
        });
        getContentPane().add(btnAuthen, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, -1, -1));

        btnPass.setText("Đăng nhập bằng mật khẩu");
        btnPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPassActionPerformed(evt);
            }
        });
        getContentPane().add(btnPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, -1, -1));

        btnBack.setIcon(new javax.swing.ImageIcon("F:\\1Hutech\\BaoMat\\DoAn\\DoAnBMTT\\src\\main\\java\\com\\mycompany\\doanbmtt\\HinhNen\\btnback.png")); // NOI18N
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 50, 50));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Made by ChillGroup");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, -1, -1));

        IconVietnam.setIcon(new javax.swing.ImageIcon("F:\\1Hutech\\BaoMat\\DoAn\\DoAnBMTT\\src\\main\\java\\com\\mycompany\\doanbmtt\\HinhNen\\iconVietNam.png")); // NOI18N
        getContentPane().add(IconVietnam, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 70, 50, 40));

        HinhNen.setIcon(new javax.swing.ImageIcon("F:\\1Hutech\\BaoMat\\DoAn\\DoAnBMTT\\src\\main\\java\\com\\mycompany\\doanbmtt\\HinhNen\\HinhNenDangNhap.jpg")); // NOI18N
        getContentPane().add(HinhNen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public class TOTPValidator {

    public static boolean validateOTP(String userInputOtp, String secretKey) {
        GoogleAuthenticator gAuth = new GoogleAuthenticator();
        int otp = Integer.parseInt(userInputOtp);         return gAuth.authorize(secretKey, otp);     }
}
    private String getSecretKeyFromDatabase(String email) {
    String query = "SELECT secret_key FROM NguoiDung WHERE email = ?";
    try (Connection conn = DriverManager.getConnection(url,username,password);
         PreparedStatement stmt = conn.prepareStatement(query)) {
        stmt.setString(1, email);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            return rs.getString("secret_key");
        }
    } catch (SQLException e) {
    }
    return null;
}
    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        String userCaptcha = txtCAPTCHA.getText();         String input = txtEmail.getText(); 
        String ppassword = new String(txtPass.getPassword()); 
        String otp = txtGG.getText();
        String secretKey = null;
    if (input.isEmpty()) {
            lbThongBao.setText("Vui lòng nhập Email hoặc Tên tài khoản!");
            return;
        }
    if (txtPass.isVisible()) {
                if (userCaptcha.isEmpty() || !userCaptcha.equals(currentCaptcha)) {
            lbThongBao.setText("CAPTCHA không chính xác. Vui lòng thử lại!");
            return;
        }

                if (LoginHandler.validateLogin(input, ppassword)) {
            try {
            int MaNguoiDung = getMaNguoiDung(input);
            tenNguoiDung = getUserNameByEmailOrUsername(input);
            boolean isAdminRole = checkAdminRole(MaNguoiDung);
            ghiNhatKyHoatDong(maNguoiDung, "Đăng nhập thành công");
            JOptionPane.showMessageDialog(this, "Đăng nhập thành công!");
            frm_GiaoDienChinh mainForm = new frm_GiaoDienChinh(tenNguoiDung, isAdminRole, MaNguoiDung);
            mainForm.setLocationRelativeTo(null);
            mainForm.setVisible(true);
            this.dispose();
        } catch (SQLException e) {
            lbThongBao.setText("Lỗi kết nối cơ sở dữ liệu. Vui lòng thử lại!");
        }
        } else {
            lbThongBao.setText("Tên tài khoản, email hoặc mật khẩu không đúng!");
        }
    }
        else if (txtGG.isVisible()) {
                if (!input.matches("^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")) {
            lbThongBao.setText("Vui lòng nhập email để sử dụng OTP!");
            return;
        }

                secretKey = getSecretKeyFromDatabase(input);
        if (secretKey == null) {
            lbThongBao.setText("Email này chưa được đăng ký đăng nhập bằng Authenticator!, Vui lòng liên hệ ADMIN!");
            return;
        }

                if (otp.isEmpty()) {
            lbThongBao.setText("Vui lòng nhập mã OTP để tiếp tục!");
            return;
        }

        try {
            if (TOTPValidator.validateOTP(otp, secretKey)) {
                try {
            int MaNguoiDung = getMaNguoiDung(input);
            tenNguoiDung = getUserNameByEmailOrUsername(input);
            boolean isAdminRole = checkAdminRole(MaNguoiDung);
            ghiNhatKyHoatDong(maNguoiDung, "Đăng nhập thành công");
            JOptionPane.showMessageDialog(this, "Đăng nhập thành công!");
            frm_GiaoDienChinh mainForm = new frm_GiaoDienChinh(tenNguoiDung, isAdminRole,MaNguoiDung);
            mainForm.setLocationRelativeTo(null);
            mainForm.setVisible(true);
            this.dispose();
        } catch (SQLException e) {
            lbThongBao.setText("Lỗi kết nối cơ sở dữ liệu. Vui lòng thử lại!");
        }
                
            } else {
                lbThongBao.setText("Mã OTP không hợp lệ!");
            }
        } catch (HeadlessException e) {
            lbThongBao.setText("Lỗi xác thực OTP: " + e.getMessage());
        }
    }
        else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn phương thức đăng nhập!");
    }
    }//GEN-LAST:event_btnDangNhapActionPerformed
private boolean checkAdminRole(int maNguoiDung) throws SQLException {
    String query = "SELECT vai_tro FROM NguoiDung WHERE ma_nguoi_dung = ?";
    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(query)) {

        stmt.setInt(1, maNguoiDung);

        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                return "admin".equals(rs.getString("vai_tro"));
            }
        }
    }
    return false; }

    private String getUserNameByEmailOrUsername(String input) {
    String query = "SELECT ho_ten FROM NguoiDung WHERE email = ? OR ten_dang_nhap = ?";
    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(query)) {
        stmt.setString(1, input);
        stmt.setString(2, input);

        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            return rs.getString("ho_ten");
        }
    } catch (SQLException e) {
    }
    return "Người dùng"; }
    private int getMaNguoiDung(String tenDangNhapHoacEmail) throws SQLException {
    String query = "SELECT ma_nguoi_dung FROM NguoiDung WHERE ten_dang_nhap = ? OR email = ?";
    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(query)) {

        stmt.setString(1, tenDangNhapHoacEmail);
        stmt.setString(2, tenDangNhapHoacEmail);

        try (ResultSet rs = stmt.executeQuery()) {
            if (rs.next()) {
                return rs.getInt("ma_nguoi_dung");             }
        }
    }
    throw new SQLException("Không tìm thấy người dùng!");
}

    private void btnResetCAPTCHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCAPTCHAActionPerformed
        displayCaptcha();
    }//GEN-LAST:event_btnResetCAPTCHAActionPerformed

    private void txtDangKyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDangKyMouseClicked
        frmDangKy formDangKy = new frmDangKy();
        formDangKy.setLocationRelativeTo(null);
        formDangKy.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_txtDangKyMouseClicked

    private void txtQuenMatKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtQuenMatKhauMouseClicked
        frmKhoiPhucMK formKhoiPhuc = new frmKhoiPhucMK();
        formKhoiPhuc.setLocationRelativeTo(null);
        formKhoiPhuc.setVisible(true);
    }//GEN-LAST:event_txtQuenMatKhauMouseClicked

    private void txtGGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGGMouseClicked
        lbAuthen.setVisible(true);
        pnAuthen.setVisible(true);
    }//GEN-LAST:event_txtGGMouseClicked

    private void btnAuthenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAuthenActionPerformed
        String input = txtEmail.getText(); 
        String secretKey = getSecretKeyFromDatabase(input);
        if(input.isEmpty())
        {
            lbThongBao.setText("Vui lòng nhập Email!");
            return;
        }
        if(!input.matches("^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"))
        { 
            lbThongBao.setText("Vui lòng nhập đúng định dạng Email!");
            return;
        }
        if (secretKey == null) {
            lbThongBao.setText("Email này chưa được đăng ký đăng nhập bằng Authenticator!");
            return;
        }
        txtGG.setVisible(true);
        lbGG.setVisible(true);
        txtPass.setVisible(false);
        lbPass.setVisible(false);
        txtCAPTCHA.setVisible(false);
        lbCAPTCHA.setVisible(false);
        lbCaptcha.setVisible(false);
        btnResetCAPTCHA.setVisible(false);
        txtQuenMatKhau.setVisible(false);
        pnQuenMatKhau.setVisible(false);
    }//GEN-LAST:event_btnAuthenActionPerformed

    private void btnPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPassActionPerformed
        txtPass.setVisible(true);
        lbPass.setVisible(true);
        txtGG.setVisible(false);
        lbGG.setVisible(false);
        txtCAPTCHA.setVisible(true);
        lbCAPTCHA.setVisible(true);
        lbCaptcha.setVisible(true);
        btnResetCAPTCHA.setVisible(true);
        txtQuenMatKhau.setVisible(true);
        pnQuenMatKhau.setVisible(true);
    }//GEN-LAST:event_btnPassActionPerformed

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        if(tenNguoiDung==null)
        {
            tenNguoiDung="Khách";
            isAdmin = false;
            maNguoiDung = -1;
        }
        frm_GiaoDienChinh formGiaoDien= new frm_GiaoDienChinh(tenNguoiDung,isAdmin,maNguoiDung);
        formGiaoDien.setLocationRelativeTo(null);
        formGiaoDien.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackMouseClicked

    private void displayCaptcha() {
    currentCaptcha = generateRandomText(5);     BufferedImage captchaImage = createCaptchaImage(currentCaptcha);
    lbCAPTCHA.setIcon(new ImageIcon(captchaImage)); }

    private String generateRandomText(int length) {
    String chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";     StringBuilder captcha = new StringBuilder();
    Random random = new Random();
    for (int i = 0; i < length; i++) {
        captcha.append(chars.charAt(random.nextInt(chars.length())));
    }
    return captcha.toString();
}
private BufferedImage createCaptchaImage(String text) {
    BufferedImage image = new BufferedImage(150, 50, BufferedImage.TYPE_INT_RGB);
    Graphics2D g = image.createGraphics();

        g.setColor(Color.LIGHT_GRAY);
    g.fillRect(0, 0, 150, 50);

        g.setFont(new Font("Arial", Font.BOLD, 28));
    g.setColor(Color.BLACK);
    g.drawString(text, 20, 35);

        g.setColor(Color.BLUE);
    for (int i = 0; i < 5; i++) {
        int x1 = new Random().nextInt(150);
        int y1 = new Random().nextInt(50);
        int x2 = new Random().nextInt(150);
        int y2 = new Random().nextInt(50);
        g.drawLine(x1, y1, x2, y2);
    }

    g.dispose();
    return image;
    }
    private String getRoleFromDatabase(String emailOrUsername) {
    String query = "SELECT vai_tro FROM NguoiDung WHERE ten_dang_nhap = ? OR email = ?";
    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(query)) {
        stmt.setString(1, emailOrUsername);
        stmt.setString(2, emailOrUsername);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            return rs.getString("vai_tro");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Lỗi truy vấn vai trò: " + e.getMessage());
    }
    return null;     }
    private void ghiNhatKyHoatDong(int maNguoiDung, String hanhDong) {
        String query = "INSERT INTO NhatKyHoatDong (ma_nguoi_dung, hanh_dong) VALUES (?, ?)";
        try (Connection conn = DriverManager.getConnection(url, username, password);
             PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, maNguoiDung);
            stmt.setString(2, hanhDong);
            stmt.executeUpdate();
        } catch (SQLException e) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http:         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                
                new frmDangNhap().setVisible(true);
                
            }
        });
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HinhNen;
    private javax.swing.JLabel IconVietnam;
    private javax.swing.JButton btnAuthen;
    private javax.swing.JLabel btnBack;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnPass;
    private javax.swing.JButton btnResetCAPTCHA;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbAuthen;
    private javax.swing.JLabel lbCAPTCHA;
    private javax.swing.JLabel lbCaptcha;
    private javax.swing.JLabel lbGG;
    private javax.swing.JLabel lbPass;
    private javax.swing.JLabel lbThongBao;
    private javax.swing.JPanel pnAuthen;
    private javax.swing.JPanel pnQuenMatKhau;
    private javax.swing.JTextField txtCAPTCHA;
    private javax.swing.JLabel txtDangKy;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGG;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JLabel txtQuenMatKhau;
    // End of variables declaration//GEN-END:variables
}
                                                                                                                                                                                                                                                                                        //@author:ÔķŇőᾝüĄĦᾍŉ¦ǠǕņĿ®đþĜĒ¾ĀĈĈĈÄĚĖôĢſĹòĚύýĄĦǌŎ¦ýòĊĊÆĔĔĚĐ¾ćăâĬĀʔɿŘŇ¦ĝĻņŀ®ĲņœᾡûðÿøĊÀĜĎĠĐ¸ĂĆĊâÜŋœţᾥôðĪōƺüĄīœŎîðÿøĊÀĜĎĠĐ·ĉćĊâÜŋœţᾥôðĦŀƸüŌþĺňƀĳòąøÀĖĖĚĖ¶ĂĆĎĊ